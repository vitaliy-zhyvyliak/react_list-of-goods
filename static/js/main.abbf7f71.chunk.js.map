{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","showGoods","setState","reverse","sort","sortBy","sortedGoods","goodA","goodB","localeCompare","length","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,WAAW,G,EAGbC,UAAY,WACV,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBE,WAAYF,EAAME,e,EAItBG,QAAU,WACR,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOI,e,EAI5BC,KAAO,SAACC,GACN,IAAMC,EAAW,YAAO,EAAKR,MAAMC,OAenC,OAbAO,EAAYF,MAAK,SAACG,EAAOC,GACvB,OAAQH,GACN,IAAK,QACH,OAAOE,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKX,EAAKR,SAAS,CACZH,MAAM,YAAKO,M,EAKjBK,MAAQ,WACN,EAAKT,SAAS,CACZH,MAAOH,K,4CAIX,WAAU,IAAD,OACP,EAA6BgB,KAAKd,MAA1BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAEf,OACE,sBAAKa,UAAU,MAAf,UACE,+CACGb,EAUC,mCACE,sBAAKa,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QAASH,KAAKT,QAHhB,qBAOA,wBACEW,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKX,KAAK,UAH3B,iCAOA,wBACEU,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKX,KAAK,WAH3B,4BAOA,wBACEU,KAAK,SACLD,UAAU,SACVE,QAASH,KAAKD,MAHhB,sBAQF,6BACGZ,EAAMiB,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,aA1CjB,wBACEH,KAAK,SACLC,QAASH,KAAKX,UAFhB,0B,GAvDMiB,IAAMC,WAmHTtB,IChIfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abbf7f71.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isVisible: false,\n  };\n\n  showGoods = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sort = (sortBy: string) => {\n    const sortedGoods = [...this.state.goods];\n\n    sortedGoods.sort((goodA, goodB) => {\n      switch (sortBy) {\n        case 'alpha':\n          return goodA.localeCompare(goodB);\n\n        case 'length':\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      this.setState({\n        goods: [...sortedGoods],\n      })\n    );\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n    });\n  };\n\n  render() {\n    const { goods, isVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>List of Goods</h1>\n        { !isVisible\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.showGoods}\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <div className=\"wrapper\">\n                <div className=\"buttons\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.reverse}\n                  >\n                    Reverse\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.sort('alpha')}\n                  >\n                    Sort alphabetically\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.sort('length')}\n                  >\n                    Sort by length\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.reset}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <ul>\n                  {goods.map(good => (\n                    <li key={good}>\n                      {good}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}